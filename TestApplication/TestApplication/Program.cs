using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace ConsoleApplication1
{
    class Program
    {  
		public static int fr(int index) { return mas[index]; }
public static void fw(int index, string type, string data){switch(type){case "int": {mas[index] = Int32.Parse(data);break;}case "string": {for(int i=0;i<70; i++){mas[index + i] = -1;}int letterIndex=0;foreach(char letter in data){mas[index + letterIndex] = (int)letter;}break;}}}
public static int[] mas = {};
static  void AnalizePerson()
		{
            if ((fr(916) >= fr(0)) && (fr(916) <= fr(1)) && (((char)fr(917)).ToString() == ((char)fr(6)).ToString()) && (((char)fr(987)).ToString() == ((char)fr(76)).ToString()))
            

                Console.WriteLine(((char)fr(146)+(char)fr(147)+(char)fr(148)+(char)fr(149)+(char)fr(150)+(char)fr(151)+(char)fr(152)+(char)fr(153)+(char)fr(154)+(char)fr(155)+(char)fr(156)+(char)fr(157)+(char)fr(158)+(char)fr(159)+(char)fr(160)+(char)fr(161)+(char)fr(162)+(char)fr(163)+(char)fr(164)).ToString());
            

            else
            
                if ((fr(916) >= fr(2)) && (fr(916) <= fr(3)) && (((char)fr(917)).ToString() == ((char)fr(216)).ToString()) && (((char)fr(987)).ToString() == ((char)fr(286)).ToString()))
                
                    Console.WriteLine(((char)fr(356)+(char)fr(357)+(char)fr(358)+(char)fr(359)+(char)fr(360)+(char)fr(361)+(char)fr(362)+(char)fr(363)+(char)fr(364)+(char)fr(365)+(char)fr(366)+(char)fr(367)+(char)fr(368)+(char)fr(369)+(char)fr(370)+(char)fr(371)+(char)fr(372)+(char)fr(373)+(char)fr(374)+(char)fr(375)).ToString());
                
                else
                
                    if ((fr(916) >= fr(4)) && (fr(916) <= fr(5)) && (((char)fr(917)).ToString() == ((char)fr(426)).ToString()) && (((char)fr(987)).ToString() == ((char)fr(496)).ToString()))
                    
                        Console.WriteLine(((char)fr(566)+(char)fr(567)+(char)fr(568)+(char)fr(569)+(char)fr(570)+(char)fr(571)+(char)fr(572)+(char)fr(573)+(char)fr(574)+(char)fr(575)+(char)fr(576)+(char)fr(577)+(char)fr(578)+(char)fr(579)+(char)fr(580)+(char)fr(581)+(char)fr(582)+(char)fr(583)+(char)fr(584)+(char)fr(585)+(char)fr(586)+(char)fr(587)+(char)fr(588)+(char)fr(589)+(char)fr(590)+(char)fr(591)+(char)fr(592)+(char)fr(593)+(char)fr(594)+(char)fr(595)+(char)fr(596)+(char)fr(597)+(char)fr(598)+(char)fr(599)+(char)fr(600)+(char)fr(601)+(char)fr(602)+(char)fr(603)+(char)fr(604)+(char)fr(605)).ToString());
                    
                    else
                    
                        Console.WriteLine(((char)fr(636)+(char)fr(637)+(char)fr(638)+(char)fr(639)+(char)fr(640)+(char)fr(641)+(char)fr(642)+(char)fr(643)+(char)fr(644)+(char)fr(645)+(char)fr(646)+(char)fr(647)+(char)fr(648)+(char)fr(649)+(char)fr(650)+(char)fr(651)+(char)fr(652)+(char)fr(653)+(char)fr(654)+(char)fr(655)+(char)fr(656)+(char)fr(657)+(char)fr(658)).ToString());
                  
            
        }



        static void Main()
        {


            
            

            

            
            
            Console.WriteLine(((char)fr(706)+(char)fr(707)+(char)fr(708)+(char)fr(709)+(char)fr(710)+(char)fr(711)+(char)fr(712)+(char)fr(713)+(char)fr(714)+(char)fr(715)+(char)fr(716)+(char)fr(717)+(char)fr(718)+(char)fr(719)+(char)fr(720)).ToString());
            fw(1198, "string",  Console.ReadLine());
            fw(1057, "int", ( Convert.ToInt32(((char)fr(1198)).ToString())).ToString());
            Console.WriteLine(((char)fr(776)+(char)fr(777)+(char)fr(778)+(char)fr(779)+(char)fr(780)+(char)fr(781)+(char)fr(782)+(char)fr(783)+(char)fr(784)+(char)fr(785)+(char)fr(786)+(char)fr(787)+(char)fr(788)+(char)fr(789)+(char)fr(790)+(char)fr(791)+(char)fr(792)+(char)fr(793)+(char)fr(794)+(char)fr(795)+(char)fr(796)+(char)fr(797)+(char)fr(798)+(char)fr(799)+(char)fr(800)+(char)fr(801)+(char)fr(802)+(char)fr(803)+(char)fr(804)+(char)fr(805)+(char)fr(806)+(char)fr(807)+(char)fr(808)+(char)fr(809)+(char)fr(810)).ToString());
            fw(1058, "string",  Console.ReadLine());
            Console.WriteLine(((char)fr(846)+(char)fr(847)+(char)fr(848)+(char)fr(849)+(char)fr(850)+(char)fr(851)+(char)fr(852)+(char)fr(853)+(char)fr(854)+(char)fr(855)+(char)fr(856)+(char)fr(857)+(char)fr(858)+(char)fr(859)+(char)fr(860)+(char)fr(861)+(char)fr(862)+(char)fr(863)+(char)fr(864)+(char)fr(865)+(char)fr(866)+(char)fr(867)+(char)fr(868)+(char)fr(869)+(char)fr(870)+(char)fr(871)+(char)fr(872)+(char)fr(873)+(char)fr(874)+(char)fr(875)+(char)fr(876)+(char)fr(877)).ToString());
            fw(1128, "string",  Console.ReadLine());

            fw(916, "int", (fr(1057)).ToString());
fw(917, "string", ((char)fr(1058)).ToString());
fw(987, "string", ((char)fr(1128)).ToString());
AnalizePerson();


        }
    }
}

